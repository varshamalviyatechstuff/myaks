name: Deploy AKS Cluster
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Azure Login
      uses: azure/login@v1
      with:
        auth-type: SERVICE_PRINCIPAL
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}", "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}", "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Terraform Init and Apply
      run: |
        terraform init
        terraform apply -auto-approve

    - name: Get AKS Credentials
      run: |
        az aks get-credentials --name myakscluster --resource-group myaks-rg --file kubeconfig --overwrite-existing

    - name: Set KUBECONFIG
      run: |
        echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV        
    - name: Deploy Kubernetes Manifests
      run: |
        kubectl apply -f namespace.yaml
        kubectl apply -f deployment.yaml

    - name: Scale Application
      run: |
        kubectl scale deployment/hello-kubernetes --replicas=3 -n development

    - name: Wait for Pods to be ready
      run: |
        kubectl wait --for=condition=ready pod -l app=hello-kubernetes -n development --timeout=300s    
    - name: Fetch Pod Logs
      run: |
        kubectl logs -l app=hello-kubernetes -n development --all-containers=true > hello-kubernetes-logs.txt
    
    - name: Fetch Pod Events
      run: |
        kubectl get events -n development --field-selector involvedObject.kind=Pod > hello-kubernetes-events.txt
    
    - name: Upload Logs
      uses: actions/upload-artifact@v2
      with:
        name: hello-kubernetes-logs
        path: hello-kubernetes-logs.txt
    
    - name: Upload Events
      uses: actions/upload-artifact@v2
      with:
        name: hello-kubernetes-events
        path: hello-kubernetes-events.txt 